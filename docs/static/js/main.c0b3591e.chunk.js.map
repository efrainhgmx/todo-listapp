{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","type","checked","onChange","htmlFor","TodoList","todos","map","KEY","App","useState","setTodos","todoTaskRef","useRef","useEffect","localStorage","setItem","JSON","stringify","storedTodos","parse","getItem","newTodos","find","onSubmit","e","preventDefault","console","log","className","ref","placeholder","onClick","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAW,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACtBC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAMjB,OACI,+BACI,uBAAOC,KAAK,WAAWH,GAAKA,EAAKI,QAAUF,EAAaG,SANxC,WACpBN,EAAWC,MAMP,uBAAOM,QAAUN,EAAjB,SAAwBC,QCTvBM,EAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOT,EAAiB,EAAjBA,WAC9B,OACI,6BACMS,EAAMC,KAAI,SAACX,GAAD,OACR,cAAC,EAAD,CAA0BA,KAAOA,EAAOC,WAAaA,GAArCD,EAAKE,U,QCH/BU,EAAM,gBAECC,EAAM,WACf,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBACpBC,qBAAU,WACNC,aAAaC,QAAQR,EAAKS,KAAKC,UAAUZ,MAC1C,CAACA,IAEJQ,qBAAU,WACN,IAAMK,EAAcF,KAAKG,MAAML,aAAaM,QAAQb,IAChDW,GACAR,EAASQ,KAEd,IAiCH,OACI,iCACI,iDACA,cAAC,EAAD,CAAUb,MAAQA,EAAQT,WArBf,SAACC,GAChB,IAAMwB,EAAQ,YAAOhB,GACfV,EAAO0B,EAASC,MAAK,SAAC3B,GAAD,OAAUA,EAAKE,KAAOA,KACjDF,EAAKI,WAAaJ,EAAKI,UACvBW,EAASW,MAkBL,uBAAME,SAVO,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,mBAQR,UACI,uBAAOC,UAAU,aAAaC,IAAMlB,EAAcX,KAAK,OAAO8B,YAAY,gBAC1E,wBAAQC,QArCE,WAClB,IAAMjC,EAAOa,EAAYqB,QAAQC,MAErB,KAATnC,IAEHY,GAAS,SAACwB,GACN,MAAM,GAAN,mBAAUA,GAAV,CAAqB,CAACrC,GAAIsC,cAAUrC,OAAMC,WAAW,QAGzDY,EAAYqB,QAAQC,MAAQ,OA4BpB,0BACA,wBAAQF,QAlBG,WACnB,IAAMV,EAAWhB,EAAM+B,QAAO,SAACzC,GAAD,OAAWA,EAAKI,aAC9CW,EAASW,IAgBD,6BAEJ,2CAAehB,EAAM+B,QAAO,SAACzC,GAAD,OAAWA,EAAKI,aAAWsC,OAAvD,wBACA,qOCzDZC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c0b3591e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const TodoItem = ({ todo, toggleTodo }) => {\r\n    const {id, task, completed } = todo;\r\n\r\n    const handleTodoClick = () => {\r\n        toggleTodo(id);\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <input type=\"checkbox\" id={ id } checked={ completed }  onChange={ handleTodoClick }/>\r\n            <label htmlFor={ id }>{ task }</label>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TodoItem } from './TodoItem';\r\n\r\nexport const TodoList = ({ todos, toggleTodo }) => {\r\n    return (\r\n        <ul>\r\n            { todos.map((todo) => (\r\n                <TodoItem key={ todo.id } todo={ todo } toggleTodo={ toggleTodo }/>\r\n            )) }\r\n        </ul>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { TodoList  } from './components/TodoList';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst KEY = \"todoApp.todos\";\r\n\r\nexport const App = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    const todoTaskRef = useRef();\r\n    useEffect(() => {\r\n        localStorage.setItem(KEY, JSON.stringify(todos))\r\n    }, [todos]);\r\n\r\n    useEffect(() => {\r\n        const storedTodos = JSON.parse(localStorage.getItem(KEY));\r\n        if (storedTodos) {\r\n            setTodos(storedTodos);\r\n        }\r\n    }, []);\r\n\r\n    const handleTodoAdd = () => {\r\n        const task = todoTaskRef.current.value;\r\n\r\n        if(task === '') return;\r\n\r\n        setTodos((prevTodos) => {\r\n            return[...prevTodos, {id: uuidv4(), task, completed: false}];\r\n        })\r\n\r\n        todoTaskRef.current.value = null;\r\n\r\n    };\r\n\r\n    const toggleTodo = (id) => {\r\n        const newTodos = [...todos];\r\n        const todo = newTodos.find((todo) => todo.id === id);\r\n        todo.completed = !todo.completed;\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const handleClearAll = () => {\r\n        const newTodos = todos.filter((todo) => !todo.completed);\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Se hizo submit');\r\n    }\r\n\r\n\r\n    return (\r\n        <main>\r\n            <h1>Lista de Tareas</h1>\r\n            <TodoList todos={ todos } toggleTodo={ toggleTodo }/>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input className=\"input-text\" ref={ todoTaskRef } type=\"text\" placeholder=\"Nueva tarea\" />\r\n                <button onClick={ handleTodoAdd }>üìù</button>\r\n                <button onClick={ handleClearAll }>üóë</button>\r\n            </form>\r\n            <p>Te quedan { todos.filter((todo) => !todo.completed).length } tareas por hacer.</p>\r\n            <p>(Para a√±adir una tarea escribela y da cl√≠ck en el bot√≥n verde, para borrar la tarea debes haberla completado marcando el cuadro blanco y despu√©s dar cl√≠ck en el bot√≥n rojo). </p>\r\n        </main>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n    );"],"sourceRoot":""}